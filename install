#!/bin/zsh
#
# ./install
#     Runs step by step installation
#
# ./install -s
#     Runs silent installation (default values and no output)

bin_dir=/usr/local/bin
home_dir=${HOME}

dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
tempFile=${dir}/tmpSDFJPOIJHJKedgekjn.temporal

silent=off
if [ "$1" = "-s" ]; then
    silent=on
fi


function installing {
    what=$1

    if [ "${silent}" = "off" ]; then
        echo -e " \e[32m✔️\e[0m Installing \e[31m${what}\e[0m:"
    fi
}

function copy {
    origin=$1
    destination=$2

    if [ "${silent}" = "off" ]; then
        echo -e "   \e[32m-\e[0m \e[90m${destination}\e[0m"
    fi
    cp ${origin} ${destination}
}

function copy_config {
    origin=$1
    destination=$2
    write=n

    if [ "${silent}" = "off" ]; then
        if [ -f "${destination}" ]; then
            echo -en "   ❓ Overwrite \"\e[32m${destination}\e[0m\"? (y/N) "
            read write
        else
            write=y
        fi

        if [ "$write" = "y" ]; then
            copy ${origin} ${destination}
        fi
    fi
}

function safe_copy {
    origin=$1
    destination=$2

    diff ${origin} ${destination} > /dev/null || {
        copy_config ${origin} ${destination}
    }
}

function copy_dir {
    origin=$1
    destination=$2

    if [ "${silent}" = "off" ]; then
        echo -e "   \e[32m-\e[0m \e[90m${destination}/*\e[0m"
    fi
    cp ${origin}/* ${destination}/
}

function ask_for {
    what=$1
    default=$2

    if [ "${silent}" = "off" ]; then
        if [ "$default" = "" ]; then
            echo -en "   ❓ Please enter \"\e[32m${what}\e[0m\": "
            read value
        else
            echo -en "   ❓ Please enter \"\e[32m${what}\e[0m\" ($default): "
            read value
            if [ "$value" = "" ]; then
                value=$default
            fi
        fi
    else
        value=$default
    fi
}

function copy_temp_file_from {
    origin=$1

    cp ${origin} ${tempFile}
}

function copy_temp_file_to {
    destination=$1

    copy ${tempFile} ${destination}
    rm ${tempFile}
}

function replace_in_temp_file {
    what=$1
    replacement=$2

    tempFile2=${tempFile}.temp
    sed "s/${what}/${replacement}/g" ${tempFile} > ${tempFile2}
    mv ${tempFile2} ${tempFile}
}

installing 'alacritty'
copy ${dir}/alacritty/alacritty.yml ${home_dir}/.config/alacritty/alacritty.yml

installing 'bash'
copy ${dir}/bash/.bashrc ${home_dir}/.bashrc
copy ${dir}/bash/.bash_profile ${home_dir}/.bashprofile
copy ${dir}/etc/bash.completion.d/complete_tst /etc/bash.completion.d/complete_tst

installing 'bin'
copy_dir ${dir}/bin ${bin_dir}

installing 'emotes list config'
copy_config ${dir}/configs/.emotes.list ${home_dir}/.emotes.list

installing 'markdown cheatsheet config'
copy_config ${dir}/configs/.md-cheatsheet ${home_dir}/.md-cheatsheet

installing 'git'
copy ${dir}/git/.git-commit-template ${home_dir}/.git-commit-template
copy ${dir}/git/.git-completion.bash ${home_dir}/.git-completion.bash
safe_copy ${dir}/git/.gitignore ${home_dir}/.gitignore
ask_for 'Git user name' 'pepellou' && git_user_name=${value}
ask_for 'Git user email' 'pepellou@gmail.com' && git_user_email=${value}
ask_for 'Github user' 'pepellou' && github_user=${value}
copy_temp_file_from ${dir}/git/.gitconfig
replace_in_temp_file '{user.email}' ${git_user_email}
replace_in_temp_file '{user.name}' ${git_user_name}
replace_in_temp_file '{github.user}' ${github_user}
copy_temp_file_to ${home_dir}/.gitconfig

installing 'vim'
copy ${dir}/vim/.vimrc ${home_dir}/.vimrc

installing 'zsh'
copy ${dir}/zsh/.zshrc ${home_dir}/.zshrc
